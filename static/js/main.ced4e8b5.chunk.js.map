{"version":3,"sources":["Components/Navbar.js","Components/Addque.js","Components/Modifyque.js","Components/Editor.js","Components/Preview.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","NavLink","to","Addque","state","question","options","opt","handleQuestion","e","_this","setState","target","value","handleChange","handleClick","length","Object","toConsumableArray","concat","deleteOpt","opts","filter","submit","uniqID","uniqid","preventDefault","props","addQuestion","_this2","this","optionList","map","key","onClick","id","onChange","placeholder","type","name","Component","connect","dispatch","option","Questions","deleteQue","questionsList","que","deleteQuestion","Editor","Components_Addque","Modifyque","Preview","App","BrowserRouter","basename","process","Components_Navbar","Route","exact","path","component","Boolean","window","location","hostname","match","initState","rootReducer","arguments","undefined","action","objectSpread","newQuestions","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ced4e8b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nfunction Navbar(){\r\n    return (\r\n        <div >\r\n            <nav >\r\n                <div className=\"nav-wrapper z-depth-3 cyan darken-3\">\r\n                    <div className=\"container\">\r\n                    <a href=\"#\" className=\"brand-logo\">Create Questionnaire</a>\r\n                    <ul className=\"right pages\">\r\n                        <li ><NavLink  to=\"/\"> Editor </NavLink></li>\r\n                        <li><NavLink to=\"/preview\">Preview</NavLink></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport uniqid from 'uniqid';\r\n\r\nclass Addque extends Component {\r\n    state = {\r\n        question:'',\r\n        options:[],\r\n        opt:''\r\n    }\r\n\r\n    handleQuestion=(e)=>{\r\n        this.setState({\r\n            question:e.target.value\r\n        })\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            opt:e.target.value\r\n        });\r\n    }\r\n\r\n    handleClick=(e)=>{\r\n       if(this.state.opt.length){\r\n            let options = [...this.state.options, this.state.opt];\r\n            this.setState({\r\n                options,\r\n                opt:''\r\n            });        \r\n            \r\n        }            \r\n    }\r\n\r\n    deleteOpt = (opts) => {\r\n        const options = this.state.options.filter(opt =>{\r\n            return opt != opts \r\n        });\r\n        this.setState({\r\n            options\r\n        })\r\n    }\r\n\r\n    submit = (e) =>{\r\n        let uniqID = uniqid();\r\n        e.preventDefault();\r\n        if(this.state.question.length && this.state.options.length){\r\n            this.props.addQuestion(uniqID, this.state.question, this.state.options );\r\n        }\r\n        this.setState({\r\n            question:'',\r\n            options:[]\r\n        });\r\n        \r\n    }\r\n\r\n  render() {\r\n      const optionList = this.state.options.length ? (\r\n          this.state.options.map(opts=>{\r\n              return(\r\n                <div className=\"keyOpts z-depth-3 valign-wrapper\" key={opts}>\r\n                    <span>{opts + \"  \"}</span><i className=\" tiny close material-icons right-align\" onClick={()=>{this.deleteOpt(opts)}}>close</i>\r\n                </div>\r\n              )\r\n          })\r\n      ) : (\r\n          <p className=\"center-align\">Please add options</p>\r\n      )\r\n\r\n    return (\r\n        <div className=\"col s6 white add\">\r\n            <div><h5 className=\"center-align\">Add Questions Here</h5></div>\r\n            <div className=\"row\">\r\n                <form className=\"col s12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <textarea id=\"textarea1\" className=\"materialize-textarea\" value={this.state.question} onChange={this.handleQuestion}></textarea>\r\n                            <label >Write Question Here</label>\r\n                        </div>\r\n                        <div className=\"input-field col s6\">\r\n                            <input placeholder=\"Option\" type=\"text\" className=\"validate\" value={this.state.opt} onChange={this.handleChange}/>\r\n                            <label >Add Options</label>\r\n                        </div>                        \r\n                            <a className=\"btn-floating btn-medium waves-effect waves-light blue-grey darken-2 add-option\"\r\n                            onClick={this.handleClick}> \r\n                                <i className=\"material-icons\">add</i>\r\n                            </a>                      \r\n                        \r\n                        <div className=\"col s12 left-align view-options\">                        \r\n                        {optionList}                        \r\n                        </div>\r\n                        <div className=\"col s12 center-align submit-div\">\r\n                            <button className=\"btn waves-effect waves-light submit\" onClick={this.submit}type=\"submit\" name=\"action\" \r\n                            >Submit<i className=\"material-icons right\">send</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>            \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addQuestion: (uniqID,question,option) => { dispatch({type:'ADD_QUESTION', \r\n        Questions:{id:uniqID, question:question, options:option }})}\r\n    }\r\n}\r\n\r\nexport default connect( null,mapDispatchToProps)(Addque);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Addque extends Component {\r\n\r\n    deleteQuestion(id){\r\n        this.props.deleteQue(id);\r\n    }\r\n  render() {\r\n    \r\n        const { Questions } = this.props; \r\n      const questionsList = Questions.length ? (\r\n          Questions.map(que => {\r\n\r\n              const {options} = que;\r\n              const optionList = options.length ? (\r\n                options.map(opt => {\r\n                    return (\r\n                        <div key={opt}>\r\n                            <p className=\"center-align\">{opt}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n               \r\n              ) : (\r\n                <div>\r\n                <p className=\"center-align\" >No options added</p>\r\n              </div>\r\n              )\r\n\r\n\r\n              return(\r\n                  <div key={que.id}>\r\n                      <p className=\"center-align\">\r\n                        <a className=\"btn-floating btn-small waves-effect waves-light red accent-1 left-align\" \r\n                        onClick={()=>{this.deleteQuestion(que.id)}}>\r\n                            <i className=\"material-icons large\">close</i>\r\n                        </a>\r\n                        <span className=\"mod-question\">{que.question}</span>\r\n                      </p>\r\n                      <p>{optionList}</p>\r\n                  </div>\r\n                \r\n              )\r\n          })\r\n      ) : (\r\n          <div>\r\n            <p className=\"center-align\" >Please add questions</p>\r\n          </div>\r\n      ) \r\n      \r\n    return (\r\n\r\n        <div className=\"col s6  teal accent-3 modify\">\r\n            <div>\r\n                <h5 className=\"center-align\">Remove Questions Here</h5>\r\n            </div>\r\n\r\n            <div>\r\n                {questionsList}\r\n            </div>    \r\n        </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Questions:state.Questions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{ \r\n        deleteQue:(id) => {dispatch({type:'DELETE_QUESTION', id:id})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addque);\r\n","import React from 'react'\r\nimport Addque from './Addque';\r\nimport Modifyque from './Modifyque';\r\n\r\nfunction Editor(){\r\n    return (\r\n        <div className=\"edit\">\r\n            <Addque/>\r\n            <Modifyque/>            \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Editor;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Preview extends Component {\r\n\r\n  render() {\r\n    \r\n        const { Questions } = this.props; \r\n      const questionsList = Questions.length ? (\r\n          Questions.map(que => {                \r\n              const {options} = que;\r\n              const optionList = options.length ? (\r\n                options.map(opt => {\r\n                    return (\r\n                        <div key={opt} className=\"opt\">                        \r\n                             <p >\r\n                                <label>\r\n                                    <input className=\"with-gap\" name={que.id} type=\"radio\"  />\r\n                                    <span>{opt}</span>\r\n                                </label>\r\n                            </p>                            \r\n                        </div>\r\n                    )\r\n                })\r\n               \r\n              ) : (\r\n                <div>\r\n                <p className=\"center-align\" >No options added</p>\r\n              </div>\r\n              )\r\n\r\n\r\n              return(\r\n                  <div key={que.id}>\r\n                      <div>\r\n                        <span className=\"mod-question\">{que.question}</span>\r\n                      </div>\r\n                      <div>{optionList}</div>\r\n                  </div>\r\n                \r\n              )\r\n          })\r\n      ) : (\r\n          <div>\r\n            <p className=\"center-align\" >Please add questions</p>\r\n          </div>\r\n      ) \r\n      \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"col s12 z-depth-3 preview\">\r\n                <div>\r\n                    <h4 className=\"center-align\">Final Questionnaire</h4>\r\n                </div>\r\n\r\n                <div className=\"preview-que\">\r\n                    {questionsList}\r\n                </div>    \r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Questions:state.Questions\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Preview);\r\n","import React, { Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Editor from './Components/Editor';\nimport Preview from './Components/Preview';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\"> \n          <div className=\"row\">\n            <Navbar/>\n            <Route exact path=\"/\" component={Editor}/>\n            <Route exact path=\"/preview\" component={Preview}/>\n          </div>   \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    Questions:[\r\n        \r\n    ]\r\n}\r\n\r\nconst rootReducer = (state = initState,action) => {\r\n    if(action.type === \"ADD_QUESTION\"){\r\n        return{\r\n            ...state,\r\n            Questions:[...state.Questions, action.Questions]\r\n        }\r\n    }else if(action.type ===\"DELETE_QUESTION\"){\r\n        let newQuestions = state.Questions.filter(que => {\r\n            return action.id !== que.id\r\n        })\r\n        return{\r\n            ...state,\r\n            Questions: newQuestions\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}